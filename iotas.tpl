// Code generated by iotas {{.AppVersion}}. DO NOT EDIT.
package {{.PkgName}}

import (
	"encoding/json"
	"fmt"
)

var {{.TypeName}}List = [...]string{
    {{range .ConstNames}}{{.}}: "{{.}}",
    {{end}}
}

var {{.TypeName}}Map = map[string]{{.TypeName}}{
    {{range .ConstNames}}"{{.}}": {{.}},
    {{end}}
}

func (t {{.TypeName}}) String() string {
    return {{.TypeName}}List[t]
}

func (t {{.TypeName}}) MarshalJSON() ([]byte, error) {
	return json.Marshal(t.String())
}

func (t *{{.TypeName}}) UnmarshalJSON(data []byte) error {
	var typeNameStr string
	if err := json.Unmarshal(data, &typeNameStr); err != nil {
		return err
	}

	id, ok := {{.TypeName}}Map[typeNameStr]
	if !ok {
		return fmt.Errorf("no mapping for the type: %s", typeNameStr)
	}

	*t = id

	return nil
}

